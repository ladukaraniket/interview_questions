====================================================================================================================================
FLEXBOX
====================================================================================================================================
What is flexbox?
	//flexbox is not some framework or something like that
	//flexbox is a new boxmodel that now css supports
	//So there is no extra dependancies you have in your project
	//So it is alternative way to say to display:block,display:inline,display:inline-block
	//So now we can use display:flex to use the flexbox model
	
What is the advantages?
	//vertical centering
	//changing the order of elements in a container
	//taking up the remaining space
	
Browser support?
	//chrome and mozilla mainly
	
How do i use flexbox?	
	//no extra setup is required
	//display: flex
	//note:: display:flex is applied on the parent wrapper container containing all divs..
	
	.container{display: flex;}
	<section class="container">
		<div></div>
		<div></div>
		<div></div>
		<div></div>
	</section>

What are flexbox principles?
	//main axis(row-horizontal) and cross axis(column-vertical)
	
	
What is flex-direction?

	//flex-direction : row (default value is left to right)
	1 2 3 4----------------------------------------------------------------------------
	
	//flex-direction : row-reverse
	----------------------------------------------------------------------------4 3 2 1

	//flex-direction : column (default value is top to down)
	----------------------------------------------------------------------------1
	----------------------------------------------------------------------------2
	----------------------------------------------------------------------------3
	----------------------------------------------------------------------------4
	
	//flex-direction : column-reverse
	----------------------------------------------------------------------------4
	----------------------------------------------------------------------------3
	----------------------------------------------------------------------------2
	----------------------------------------------------------------------------1
	

So what are the possible values of flex-direction?
	//row,column,row-reverse,column-reverse
	

What is justify-content?
	//it works same as text-align
	//it has 5 values
	//flex-start,flex-end,center,space-around,space-between
	//space-between remove spaces from front and end
	
	
	Note: if we have used flex-direction as row-reverse and it is printed to the very right 
		----------------------------------------------------------------------------4 3 2 1
	
	1) flex-direction:right & justify-content:flex-start
		If we use both, it will remain same as in row-reverse it is the start position
		----------------------------------------------------------------------------4 3 2 1

	2) flex-direction:right & justify-content:flex-end
		If we use both, divs order will remain same but it will come to left as it is the end position for row-reverse
		4 3 2 1----------------------------------------------------------------------------

	3) flex-direction:right & justify-content:center
		If we use both, divs order will remain same but it will come to center as it is the center position for row-reverse
		--------------------------------------4 3 2 1--------------------------------------

	4) flex-direction:right & justify-content:space-around
		If we use both, divs order will remain same but it will appear with spaces around
		--------------4----------------3---------------2----------------1---------------

	5) flex-direction:right & justify-content:space-between
		If we use both, divs order will remain same but it will appear with spaces in between
		4------------------------3--------------------------2--------------------------1


What is justify-content used for?
	//justify-content is used for alignment and spacing along the main axis.


What is align-items?
	//for this we need to set a height to the parent container ad also a border.
	//Then only we can see the effect
	//align-items is used for alignment and spacing along the cross axis.
	//it has 5 values
	//flex-start,flex-end,center,baseline,stretch
	//baseline may be look same as flext-start most of cases..
	but we will notice the change when all div heights are not of same size..
	But we will notice bottom of each div is alligned at same line..
	
	
	1) flex-direction:right & justify-content:flex-end & align-items : flex-start
		 ____________________________________________________________________________________
		!----------------------------------------------------------------------------4 3 2 1 !
		!																					 !
		!																					 !
		!                                                                                    !
		!____________________________________________________________________________________!
		
		
	2) flex-direction:right & justify-content:flex-end & align-items : flex-end
		 ____________________________________________________________________________________
		!																					                                           !
		!																					                                           !
		!                                                                                    !
		!----------------------------------------------------------------------------4 3 2 1 !
		!____________________________________________________________________________________!
		
	3) flex-direction:right & justify-content:flex-end & align-items : flex-end
		 ____________________________________________________________________________________
		!																					                                           !
		!																					                                           !
		!----------------------------------------------------------------------------4 3 2 1 !
		!																					                                           !
		!____________________________________________________________________________________!
	
	4) flex-direction:right & justify-content:flex-end & align-items : baseline
		 ____________________________________________________________________________________
		!																			                                           2   !
		!----------------------------------------------------------------------------4 3 2 1 !
		!																					                                           !
		!																					                                           !
		!                                                                                    !
		!____________________________________________________________________________________!
		

	5) flex-direction:right & justify-content:flex-end & align-items : stretch
		 ____________________________________________________________________________________
		!																			                                      4 3 2 1 !
		!																			                                      4 3 2 1 !
		!																			                                      4 3 2 1 !
		!																			                                      4 3 2 1 !
		!																			                                      4 3 2 1 !
		!___________________________________________________________________________________!
		


What's the default value for align-items?
	//stretch


What is flex-wrap?
	//this closely works with flex-direction
	//so there is a shorthand to use these 2 i.e flex-flow: flex-diection flex-wrap
	

What are the properties available for flex-wrap?
	//nowrap(default)
	//wrap
	//wrap-reverse

What is align-contents?
	//align-contents will work when we are using flex-wrap and our divs within the container are visible in multiple lines..
  //It has same properties as of justify-content.
  //So it 5 properties.
  //flex-start,flex-end,center,space-around,space-between
  
  
===========================================================================================================================
CSS
===========================================================================================================================
What is CSS?
	//CSS (Cascading Style Sheets) is used to style and lay out web pages 
		 â€” for example, to alter the font, color, size, and spacing of your content, split it into multiple columns, 
		 or add animations and other decorative features

What is current stable version of css?	
	//css3 ( css4 is never declared as stable)
	
How we can add css to our document?
	//import extenal stylesheet or css file
	//embedded style
	//inline style
	
Among the above ways which one has highest priority? Which one will override the rest?
	//inline has highest priority, then embedded and then external
	
How to add external css to HTML page?
	//using link href
	//<link rel="stylesheet" href="styles.css">
	
How to add embedded style in html page?
	//using style tag
	<style> </style>
	
How to add inline styling?
	//by addig style attribute
	<div style=""></div>
	
How we can add a class/classes to an element?
	<div class="a b c"></div>

How does CSS actually work?
	//1. The browser loads the HTML (e.g. receives it from the network).
	//2. It converts the HTML into a DOM (Document Object Model). 
	     The DOM represents the document in the computer's memory. 
        //3. The browser then fetches most of the resources that are linked to by the HTML document, 
	     Such as embedded images and videos ... and linked CSS! 
	     JavaScript is handled a bit later on in the process, 
	//4. The browser parses the fetched CSS, 
	     And sorts the different rules by their selector types into different "buckets", 
	     e.g. element, class, ID, and so on.
	     Based on the selectors it finds, it works out which rules should be applied to which nodes in the DOM, 
	     And attaches style to them as required 
	     (this intermediate step is called a render tree)
	//5. The render tree is laid out in the structure it should appear in after the rules have been applied to it.
	//6. The visual display of the page is shown on the screen (this stage is called painting).
	
What happens if a browser encounters CSS it doesn't understand?
	//If a browser is parsing your rules, and encounters a property or value that it doesn't understand, 
	  	it ignores it and moves on to the next declaration.

What is a selector in CSS?
	//CSS selectors are used to "find" (or select) the HTML elements you want to style.

How many ways we can devide the css selectors?
	//We can divide CSS selectors into five categories:
	1. Simple selectors (select elements based on name, id, class)
	2. Combinator selectors (select elements based on a specific relationship between them)
	3. Pseudo-class selectors (select elements based on a certain state)
	4. Pseudo-elements selectors (select and style a part of an element)
	5. Attribute selectors (select elements based on an attribute or attribute value)


What is CSS Simple selectors?
	//.class		.intro			Selects all elements with class="intro"
	//#id			#firstname		Selects the element with id="firstname"
	//*			*			Selects all elements
	//element		p			Selects all <p> elements
	//element,element,..	div, p			Selects all <div> elements and all <p> elements



What is CSS Combinator selectors?
	A CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator.
	There are four different combinators in CSS:

	1. descendant selector (space)
		//The descendant selector matches all elements that are descendants of a specified element.
		//The following example selects all <p> elements inside <div> elements: 
		div p { background-color: yellow; } => This will select the 3 paragraphs within div
		
		<div>
  			<p>Paragraph 1 in the div.</p>
  			<p>Paragraph 2 in the div.</p>
  			<section><p>Paragraph 3 in the div.</p></section>
		</div>
		<p>Paragraph 4. Not in a div.</p>
		<p>Paragraph 5. Not in a div.</p>
		
	2. child selector (>)
		//The child selector selects all elements that are the children of a specified element.
		//The following example selects all <p> elements that are children of a <div> element:
		div > p { background-color: yellow; } => This will select the 3 paragraphs within div which are direct children

		<div>
  			<p>Paragraph 1 in the div.</p>
  			<p>Paragraph 2 in the div.</p>
  			<section>
				<p>Paragraph 3 in the div.</p> <!-- not Child but Descendant -->
			</section> 
  			<p>Paragraph 4 in the div.</p>
		</div>
		<p>Paragraph 5. Not in a div.</p>
		<p>Paragraph 6. Not in a div.</p>
		
	3. adjacent sibling selector (+)
		//The adjacent sibling selector selects all elements that are the adjacent siblings of a specified element.
		//Sibling elements must have the same parent element, and "adjacent" means "immediately following".
		//The following example selects all <p> elements that are placed immediately after <div> elements:
	
		div + p { background-color: yellow; } => This will select the 1st paragraph after div which is sibling
		div + * { background-color: yellow; } => This will select first whatever element type available after div
									(not necessarily p)

		<div>
  			<p>Paragraph 1 in the div.</p>
  			<p>Paragraph 2 in the div.</p>
		</div>
		<p>Paragraph 3. Not in a div.</p>
		<p>Paragraph 4. Not in a div.</p>

	4. general sibling selector (~)
		//The general sibling selector selects all elements that are siblings of a specified element.
		//The following example selects all <p> elements that are siblings of <div> elements
		
		div ~ p { background-color: yellow; } => selects paragraph 3 and paragraph 4.
		
		<p>Paragraph 1.</p>
		<div>
  			<p>Paragraph 2.</p>
		</div>
		<p>Paragraph 3.</p>
		<code>Some code.</code>
		<p>Paragraph 4.</p>
		
What is the difference between div p and div > p?
	div p 	=> all the direct or indirect children of div (i.e. checks for multi level down)
	div > p => all the direct children of div (i.e. one level down)
		
What is the difference between div + p and div ~ p?
	div + p => just the next sibling (must be direct child of same parent)
	div ~ p => all the siblings (must be direct children of same parent)
		
What is CSS Pseudo classes selectors?
	//A pseudo-class is used to define a special state of an element.
	//For example, it can be used to:
		Style an element when a user mouses over it
		Style visited and unvisited links differently
		Style an element when it gets focus
	//Syntax is : 
	selector:pseudo-class {	property: value; }

	//Example
		a:hover { }
		a:link { }
		a:visited { }
		a:active { }

	//Note: a:hover MUST come after a:link and a:visited in the CSS definition in order to be effective! 
		a:active MUST come after a:hover in the CSS definition in order to be effective! 
		Pseudo-class names are not case-sensitive.
		
	//:first-child
	//:first-of-type
	//:last-child
	//:last-of-type
	//:nth-child(n)
	//:nth-of-type(n)
	
	
What is Pseudo element selectors?
	//A CSS pseudo-element is used to style specified parts of an element.
	//For example, it can be used to:
		//Style the first letter, or line, of an element
		//Insert content before, or after, the content of an element
		
	::after		p::after	Insert content after every <p> element
	::before	p::before	Insert content before every <p> element
	::first-letter	p::first-letter	Selects the first letter of every <p> element
	::first-line	p::first-line	Selects the first line of every <p> element
	::selection	p::selection	Selects the portion of an element that is selected by a user


What is CSS Simple selectors?
	//.class		.intro			Selects all elements with class="intro"
	//#id			#firstname		Selects the element with id="firstname"
	//*			*			Selects all elements
	//element		p			Selects all <p> elements
	//element,element,..	div, p			Selects all <div> elements and all <p> elements





































